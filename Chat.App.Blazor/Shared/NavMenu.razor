@using Chat.App.Blazor.Models;
@using Microsoft.AspNetCore.Identity;
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<User> userManager;
<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" Theme="_theme" />





    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@DrawerToggle" />
    <MudSpacer />
    
    <MudSwitch @bind-Checked="@_isDarkMode" ThumbIcon="@(_isDarkMode==true ? Icons.Material.Filled.DarkMode : Icons.Material.Filled.LightMode)" ThumbIconColor="@(_isDarkMode==true ? Color.Success : Color.Error)"></MudSwitch>
        <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/MudBlazor/MudBlazor" Target="_blank" />
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" Elevation="1">
        <MudDrawerHeader>
            <MudText Typo="Typo.h6">Chat</MudText>
        </MudDrawerHeader>
        <MudNavMenu>
            @foreach (var contact in UserContacts)
            {
                <MudNavLink Href="@("chat/"+@contact.Friend.Id)" Icon="@Icons.Material.Outlined.Dashboard">
                    @contact.Friend.UserName
                </MudNavLink>
            }
        </MudNavMenu>
    </MudDrawer>



@code {

    string? currentUser = string.Empty;
    List<Contact>? UserContacts = new();

    private MudTheme _theme = new();
    private bool _isDarkMode;
    bool _drawerOpen = false;
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }



    protected async override Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authenticationState.User;
        currentUser = user?.Identity?.Name;
        var foundUser = await userManager.FindByNameAsync(currentUser);

        UserContacts = foundUser?.Contacts;
    }



}
